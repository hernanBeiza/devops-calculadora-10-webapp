[{"/Users/hb/Documents/GitHub/devops-calculadora-10-webapp/devops-calculadora-10-webapp/src/index.js":"1","/Users/hb/Documents/GitHub/devops-calculadora-10-webapp/devops-calculadora-10-webapp/src/App.js":"2","/Users/hb/Documents/GitHub/devops-calculadora-10-webapp/devops-calculadora-10-webapp/src/reportWebVitals.js":"3","/Users/hb/Documents/GitHub/devops-calculadora-10-webapp/devops-calculadora-10-webapp/src/components/top/Top.js":"4","/Users/hb/Documents/GitHub/devops-calculadora-10-webapp/devops-calculadora-10-webapp/src/components/calculo/Calculo.js":"5","/Users/hb/Documents/GitHub/devops-calculadora-10-webapp/devops-calculadora-10-webapp/src/components/resultado/Resultado.js":"6","/Users/hb/Documents/GitHub/devops-calculadora-10-webapp/devops-calculadora-10-webapp/src/services/CalculoService.js":"7"},{"size":548,"mtime":1611797844056,"results":"8","hashOfConfig":"9"},{"size":423,"mtime":1611868675541,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1611796292278,"results":"11","hashOfConfig":"9"},{"size":583,"mtime":1611867910517,"results":"12","hashOfConfig":"9"},{"size":3938,"mtime":1612633350300,"results":"13","hashOfConfig":"9"},{"size":2177,"mtime":1612633981493,"results":"14","hashOfConfig":"9"},{"size":837,"mtime":1612633350302,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1cel5ac",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/hb/Documents/GitHub/devops-calculadora-10-webapp/devops-calculadora-10-webapp/src/index.js",[],["33","34"],"/Users/hb/Documents/GitHub/devops-calculadora-10-webapp/devops-calculadora-10-webapp/src/App.js",[],"/Users/hb/Documents/GitHub/devops-calculadora-10-webapp/devops-calculadora-10-webapp/src/reportWebVitals.js",[],"/Users/hb/Documents/GitHub/devops-calculadora-10-webapp/devops-calculadora-10-webapp/src/components/top/Top.js",["35"],"import './Top.css';\n\nimport { Jumbotron, Button } from 'react-bootstrap';\n\nfunction Top() {\n  return (\n    <div className=\"Top\">\n  \t  <Jumbotron>\n        <h1>Calculadora 10%</h1>\n        <p className=\"lead\">Usa la nueva hiper calculadora del 10%.</p>\n        {/**}\n        <hr className=\"my-2\" />\n        <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\n        <p className=\"lead\">\n          <Button color=\"primary\">Calcular ahora</Button>\n        </p>\n        */}\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Top;\n","/Users/hb/Documents/GitHub/devops-calculadora-10-webapp/devops-calculadora-10-webapp/src/components/calculo/Calculo.js",["36"],"import React, { useState, useEffect } from 'react';\n\nimport './Calculo.css';\nimport { Row, Col, Form, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCalculator } from '@fortawesome/free-solid-svg-icons'\n\nimport CalculoService from './../../services/CalculoService';\n\nimport Resultado from './../resultado/Resultado';\n\nfunction Calculo() {\n  const [desactivado, setDesactivado] = useState(false);\n  const [estaCargando, setCargando] = useState(false);\n  const [mostrarResultado, setMostrarResultado] = useState(false);\n  const [sueldo, setSueldo] = useState(0)\n  const [saldo, setSaldo] = useState(0)\n\n  const [porcentaje, setPorcentaje] = useState(0);\n  const [saldoRestante, setSaldoRestante] = useState(0);\n  const [impuesto, setImpuesto] = useState(0);\n\n  useEffect(() => {\n    setDesactivado( validarFormulario() )\n  }, [sueldo, saldo]);\n\n  const validarFormulario = () => {\n  \tconsole.log(\"validarFormulario\");\n  \t//console.log(desactivado,sueldo,saldo);\n    if (sueldo === 0) {\n      //setMensajeError('sueldo cant be blank!')\n      return false;\n    } else if (saldo === 0) {\n      //setMensajeError('saldo cant be blank!')\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n\tconst enviar = (e) => {\n    e.preventDefault();\n\t\tconsole.log(\"enviar: \" + sueldo, saldo);\n\t\t//Luego de la llamada al ms#\n    setCargando(true);\n\t\tlet calculoService = new CalculoService();\n    let today = new Date();\n    var fechaUf = today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear();\n    console.log(fechaUf);\n    calculoService.calcular(sueldo,saldo,fechaUf).then(data=>{\n      setCargando(false);\n      setPorcentaje(data.dxc.toLocaleString(\"es-ES\"));\n      setSaldoRestante(data.saldo.toLocaleString(\"es-ES\"));\n      setImpuesto(data.impuesto.toLocaleString(\"es-ES\"));\n      setMostrarResultado(true);\n      //Pasar porcentaje,saldoRestante e impuestos\n    }).catch(error=>{\n      console.error(error);\n      setCargando(false);\n    });\n\t}\n\n\tconst limpiar = () => {\n\t\tconsole.log(\"limpiar\");\n\t\tsetSueldo(0);\n\t\tsetSaldo(0);\n    setMostrarResultado(false);\n\t\tsetPorcentaje(0);\n    setSaldoRestante(0);\n    setImpuesto(0);\n\t}\n\n  return (\n    <div className=\"calculo\">\n      <Row>\n        <Col>\n\t\t\t\t\t<Form onSubmit={ enviar }>\n            <Form.Group as={Row} controlId=\"inputSueldo\">\n              <Form.Label column sm={2}>Sueldo</Form.Label>\n              <Col>\n                <Form.Control type=\"number\" placeholder=\"Ingrese sueldo\" value={sueldo} onChange= { e => setSueldo(e.target.value) } />\n                <Form.Text className=\"text-muted\">\n                  Nunca compartiremos esta información.\n                </Form.Text>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"inputSaldo\">\n              <Form.Label column sm={2}>Saldo</Form.Label>\n              <Col>  \n                <Form.Control type=\"number\" placeholder=\"Ingrese saldo\" value={saldo} onChange= { e => setSaldo(e.target.value) } />\n                <Form.Text className=\"text-muted\">\n                  Nunca compartiremos esta información.\n                </Form.Text>\n              </Col>\n            </Form.Group>\n            <Row>\n              <Col>\n                <Button block id=\"botonEnviar\" variant=\"primary\" type=\"submit\" disabled={ !desactivado || estaCargando }>\n                  {estaCargando ? <span><Spinner size=\"sm\" animation=\"border\"/>Calculando... </span> : \n                  <span> <FontAwesomeIcon icon={faCalculator} style={{marginRight: \"5\"}} />Calcular</span>}\n                </Button>\n              </Col>\n            </Row>\n\t\t\t\t  </Form>\n\t\t    </Col>\n\t    </Row>\n\t    <Row>\n\t    \t<Col>\n\t\t\t\t\t<Resultado mostrarResultado={mostrarResultado} porcentaje={porcentaje} saldo={saldoRestante} impuesto={impuesto} onLimpiar={limpiar}/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n    </div>\n  );\n}\n\n\nexport default Calculo;\n","/Users/hb/Documents/GitHub/devops-calculadora-10-webapp/devops-calculadora-10-webapp/src/components/resultado/Resultado.js",["37","38","39"],"/Users/hb/Documents/GitHub/devops-calculadora-10-webapp/devops-calculadora-10-webapp/src/services/CalculoService.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":3,"column":21,"nodeType":"46","messageId":"47","endLine":3,"endColumn":27},{"ruleId":"48","severity":1,"message":"49","line":25,"column":6,"nodeType":"50","endLine":25,"endColumn":21,"suggestions":"51"},{"ruleId":"44","severity":1,"message":"52","line":8,"column":10,"nodeType":"46","messageId":"47","endLine":8,"endColumn":19},{"ruleId":"44","severity":1,"message":"53","line":8,"column":31,"nodeType":"46","messageId":"47","endLine":8,"endColumn":35},{"ruleId":"44","severity":1,"message":"54","line":20,"column":18,"nodeType":"46","messageId":"47","endLine":20,"endColumn":28},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'validarFormulario'. Either include it or remove the dependency array.","ArrayExpression",["57"],"'Container' is defined but never used.","'Form' is defined but never used.","'setVariant' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [sueldo, saldo, validarFormulario]",{"range":"60","text":"61"},[895,910],"[sueldo, saldo, validarFormulario]"]